# 服务配置
server:
  port: 8888

# 数据源配置
spring:
  application:
    name: JavaWebDemo
  banner:
    location: classpath:banner/banner.txt
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/java_web_demo?serverTimezone=UTC
    username: root
    password: root123
  # redis配置
  redis:
    # Redis数据库索引（默认为0），，使用最后一个库
    database: 15
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: 123456
    # 连接超时时间
    timeout: 5s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0


# mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      logic-delete-field: is_deleted # 全局逻辑删除字段名
      logic-delete-value: y # 逻辑已删除值
      logic-not-delete-value: n # 逻辑未删除值


############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # 指定 token 提交时的前缀， Token前缀 与 Token值 之间必须有一个空格
  token-prefix: Bearer
  # token 名称（同时也是 cookie 名称）
  token-name: sa-token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效 ---> 设置为7天
  timeout: 604800
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: 120
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true

# 日志配置
logging:
  level:
    com.web.www.mapper.*: debug

# RSA 公钥和私钥配置
rsa:
  public-key: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC+lJKizzrus5fIxJSn99j8nZTlfmgQ5aFo6pdVgkn5h5d+1+KHfKDbZKElw1Y+VvLitHJDjmhnp2fymVP7ENxcRe2z4YQbkv5muL9ySFaZ36P0ZrZUCcIhuKb2/pcFSeo5raHytwjOcv/gwajK8IiiAsrB888LHnmXhbrMq9vrXQIDAQAB
  private-key: MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAL6UkqLPOu6zl8jElKf32PydlOV+aBDloWjql1WCSfmHl37X4od8oNtkoSXDVj5W8uK0ckOOaGenZ/KZU/sQ3FxF7bPhhBuS/ma4v3JIVpnfo/RmtlQJwiG4pvb+lwVJ6jmtofK3CM5y/+DBqMrwiKICysHzzwseeZeFusyr2+tdAgMBAAECgYBEES56RceHn88zXrq1bzkpqGKYwNgMSOeoYDkiykD/hWUfYZ2/xExzb3J62VSBOW7Qd6Bj7oXtl4XxyL+M6U26bPl/rStDbMuF3/Gv/eVKJwLAzhZ2CW4/r7d5npiVU3SiPnS3BZsiAtJR4eQzDpy+YHZfu9fIrTR6yQrQrk7eJQJBAOzO20/z4y1rQl0bt1xJ+C2fg/E/EoFe0uVm7GFVj+M4KNjxxFp0KXsjD3ts43VUwH4bi6i9tv5S8oR6KvfhvLcCQQDOBp0WIVMX1fskgu5c5KgffF1Jx+zZe14ouy/w7oOV/LafTj8zcf1T8piY1unYfyB9nzWRq6+zS1aEGE9x/SyLAkEAvzUjhkJB++lwU2fOvRkI6CW1zrSDx6v+E7bwRINmxCwTZ2CHkBXdbIzZsmowmwuMxgaN1PkiaeYl5ewTB8XgrwJBAKdTA713by7KoN90Xvae1lRMAs/rSVcQNNbLwBHjBIeJ6R/UwsubZm0JeBmZYe5swQyFg1I9p8LsCuXZgJxJTCUCQC564zUPHBdCQNZLM1jYg45csmXXOkRrGEGXXAVsJw53mWPCsJc/3PdRCDaHDsTFHnBfX0YBf+0KSicdOvxwONQ=

